CREATE TABLE BIT_DB.SpotifyData (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal (4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
accouticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal (5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time signature integer NOT NULL)
;
SELECT * FROM BIT_DB.SpotifyData;

/*What is the average danceability by artist and track? */

SELECT artist_name, track_name, AVG (danceability)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;
 
/* Who are the top 10 artists based on popularity? */
SELECT DISTINCT artist_name, track_name, AVG(popularity), MIN(popularity), Max(popularity)

FROM BIT_DB.SpotifyData
GROUP BY artist_name
ORDER BY max(popularity) desc
;

SELECT artist_name, track_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 12
;

SELECT DISTINCT artist_name, track_name, MAX(popularity)
FROM BIT_DB.SpotifyData
GROUP BY artist_name
ORDER BY popularity desc
LIMIT 10
;

/* What artist released the longest song? */

SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.SpotifyData
;

/*What's the average danceability for the 10 most popular songs?*/

SELECT AVG(danceability)
FROM BIT_DB.SpotifyData
WHERE track_name
IN (SELECT track_name
FROM BIT_DB.SpotifyData
ORDER BY popularity desc
LIMIT 10)
;


/* How many songs are featured by another artist? */

SELECT COUNT(track_name)
FROM BIT_DB.SpotifyData
WHERE track_name like '%feat%'
;


/* What are the songs that are featured by another artist? */
SELECT artist_name, track_name
FROM BIT_DB.SpotifyData
WHERE track_name like '%feat%'
;


/*
/What artist are featured more than once?*/
SELECT artist_name, COUNT(*)
FROM BIT_DB.SpotifyData
GROUP BY artist_name
HAVING COUNT(*)>1
;

/* How many songs does Dua Lipa have on the list? */

SELECT artist_name, COUNT(*)
FROM BIT_DB.SpotifyData
WHERE artist_name = 'Dua Lipa'
;

/* What songs does Dua Lipa have on the list? */
SELECT artist_name, track_name
FROM BIT_DB.SpotifyData
WHERE artist_name = 'Dua Lipa'
;

/* What is the name of the track id with the track id '6cx06DFPPHchuUAcTxznu9'? */

SELECT * 
FROM BIT_DB.SpotifyData
WHERE track_id = '6cx06DFPPHchuUAcTxznu9'
;

/* What is the average tempo for the 10 least popular songs? */

SELECT AVG(tempo)
FROM BIT_DB.SpotifyData
WHERE track_name
IN (SELECT track_name
FROM BIT_DB.SpotifyData
ORDER BY popularity asc
LIMIT 10)
;

/* What are the tracks that are categorized as 'Driving'? */

SELECT *
    FROM BIT_DB.SpotifyData
    WHERE CASE 
            WHEN tempo >= 155 THEN 'Workout'
            WHEN tempo >= 100 THEN 'Driving'
            ELSE 'Chill'
          END = 'Driving' 
    ORDER BY tempo ASC
    
;

/***Below are 2 different ways to find the names of the top 3 slowest tracks that are categorized as chill. The first has a column named 'mood_type". The 2nd does not*** */ 

/* What are the names of the top 3 slowest tracks that are categorized as chill? */     

SELECT *,
CASE 
       WHEN tempo >= 155 THEN 'Workout'
       WHEN tempo >= 100 THEN 'Driving'
       ELSE 'Chill'
END AS mood_type
FROM BIT_DB.SpotifyData
WHERE mood_type = 'Chill'
ORDER BY tempo ASC
LIMIT 3    
;
    
/* What are the names of the top 3 slowest tracks that are categorized as chill? */ 
SELECT *
FROM BIT_DB.SpotifyData
WHERE
    CASE 
    WHEN tempo >= 155 THEN 'Workout'
    WHEN tempo >= 100 THEN 'Driving'
    ELSE 'Chill'
END = 'Chill'
ORDER BY tempo asc
LIMIT 3
;

/*What is the average popularity of the 3 slowest tracks that are categorized as Chill? */

SELECT AVG(popularity) AS avg_popularity
FROM (
    SELECT popularity
    FROM BIT_DB.SpotifyData
    WHERE CASE 
            WHEN tempo >= 155 THEN 'Workout'
            WHEN tempo >= 100 THEN 'Driving'
            ELSE 'Chill'
          END = 'Chill'
    ORDER BY tempo ASC
    LIMIT 3
) AS top_chill_tracks
;
